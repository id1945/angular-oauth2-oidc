{"version":3,"file":"main.5523a25753d2c13b.js","mappings":"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","sources":["./src/app/app-menu.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/auth-guard-with-forced-login.service.ts","./src/app/core/auth-guard.service.ts","./src/app/core/auth.service.ts","./src/app/core/core.module.ts","./src/app/fallback.component.ts","./src/app/should-login.component.ts","./src/environments/environment.prod.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './core/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  template: `<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"basics/home\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"basics/public\">Public</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"basics/admin1\">\n          <span *ngIf=\"(isAuthenticated$ | async) === false\">🔒</span>\n          Admin-1\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"extras/admin2\">\n          <span *ngIf=\"(isAuthenticated$ | async) === false\">🔒</span>\n          Admin-2\n        </a>\n      </li>\n    </ul>\n    <button class=\"btn btn-sm btn-default\" (click)=\"login()\" *ngIf=\"(isAuthenticated$ | async) === false\">Log in</button>\n    <span *ngIf=\"isAuthenticated$ | async\" id=\"email\">{{email}}</span>\n    <button *ngIf=\"isAuthenticated$ | async\" href=\"#\" (click)=\"logout()\" class=\"btn btn-link\">(log out)</button>\n  </nav>`,\n})\nexport class AppMenuComponent {\n  isAuthenticated$: Observable<boolean>;\n\n  constructor(private authService: AuthService) {\n    this.isAuthenticated$ = authService.isAuthenticated$;\n  }\n\n  login() {\n this.authService.login();\n}\n  logout() {\n this.authService.logout();\n}\n\n  get email(): string {\n    return this.authService.identityClaims\n    ? (this.authService.identityClaims as any)['email']\n    : '-';\n  }\n}\n","/* eslint-disable brace-style */\n/* eslint-disable max-len */\n\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './core/auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: `<div class=\"container-fluid\">\n    <app-menu></app-menu>\n    <div class=\"container-fluid mt-2\">\n      <h1>Welcome</h1>\n      <p>This is part of the app.component. Below is the router outlet.</p>\n      <hr>\n      <router-outlet></router-outlet>\n      <hr>\n      <p>You can <a routerLink=\"/url-without-route\">go to a url without a route</a> to see the fallback route.</p>\n      <hr>\n      <p>\n        <button class=\"btn btn-success mr-1\" (click)='login()'>login</button>\n        <button class=\"btn btn-primary mr-1\" (click)='logout()'>logout</button>\n        <button class=\"btn btn-link mr-1\" (click)='logoutExternally()'>logout externally...</button>\n      </p>\n      <p>\n        <button class=\"btn btn-warning mr-1\" (click)='refresh()'>force silent refresh</button>\n        <button class=\"btn btn-secondary mr-1\" (click)='reload()'>reload page</button>\n        <button class=\"btn btn-danger mr-1\" (click)='clearStorage()'>clear storage</button>\n      </p>\n      <hr>\n      <table class=\"table table-bordered table-sm table-props\">\n        <tr><th>IsAuthenticated</th><td><code id=\"isAuthenticated\">{{isAuthenticated$ | async}}</code></td></tr>\n        <tr><th>HasValidToken</th><td><code id=\"hasValidToken\">{{hasValidToken}}</code></td></tr>\n        <tr><th>IsDoneLoading</th><td><code id=\"isDoneLoading\">{{isDoneLoading$ | async}}</code></td></tr>\n        <tr><th>CanActivateProtectedRoutes</th><td><code id=\"canActivateProtectedRoutes\">{{canActivateProtectedRoutes$ | async}}</code></td></tr>\n        <tr><th>IdentityClaims</th><td class=\"pre\"><code id=\"identityClaims\">{{identityClaims | json}}</code></td></tr>\n        <tr><th>RefreshToken</th><td><code class=\"break-all\">{{refreshToken}}</code></td></tr>\n        <tr><th>AccessToken</th><td><code class=\"break-all\">{{accessToken}}</code></td></tr>\n        <tr><th>IdToken</th><td><code class=\"break-all\">{{idToken}}</code></td></tr>\n      </table>\n    </div>\n  </div>`,\n})\nexport class AppComponent {\n  isAuthenticated$: Observable<boolean>;\n  isDoneLoading$: Observable<boolean>;\n  canActivateProtectedRoutes$: Observable<boolean>;\n\n  constructor(\n    private authService: AuthService,\n  ) {\n    this.isAuthenticated$ = this.authService.isAuthenticated$;\n    this.isDoneLoading$ = this.authService.isDoneLoading$;\n    this.canActivateProtectedRoutes$ = this.authService.canActivateProtectedRoutes$;\n  }\n\n  login() { this.authService.login(); }\n  logout() { this.authService.logout(); }\n  refresh() { this.authService.refresh(); }\n  reload() { window.location.reload(); }\n  clearStorage() { localStorage.clear(); }\n\n  logoutExternally() {\n    window.open(this.authService.logoutUrl);\n  }\n\n  get hasValidToken() { return this.authService.hasValidToken(); }\n  get accessToken() { return this.authService.accessToken; }\n  get refreshToken() { return this.authService.refreshToken; }\n  get identityClaims() { return this.authService.identityClaims; }\n  get idToken() { return this.authService.idToken; }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppMenuComponent } from './app-menu.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FallbackComponent } from './fallback.component';\nimport { ShouldLoginComponent } from './should-login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppMenuComponent,\n    FallbackComponent,\n    ShouldLoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CoreModule.forRoot(),\n    RouterModule.forRoot([\n    { path: '', redirectTo: 'basics/home', pathMatch: 'full' },\n    // Note: this way of module loading requires this in your tsconfig.json: \"module\": \"esnext\"\n    { path: 'basics', loadChildren: () => import('./feature-basics/basics.module').then(m => m.BasicsModule) },\n    { path: 'extras', loadChildren: () => import('./feature-extras/extras.module').then(m => m.ExtrasModule) },\n    { path: 'should-login', component: ShouldLoginComponent },\n    { path: '**', component: FallbackComponent },\n], {})\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardWithForcedLogin {\n\n  constructor(\n    private authService: AuthService,\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> {\n    return this.authService.isDoneLoading$.pipe(\n      filter(isDone => isDone),\n      switchMap(_ => this.authService.isAuthenticated$),\n      tap(isAuthenticated => isAuthenticated || this.authService.login(state.url)),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard {\n  constructor(\n    private authService: AuthService,\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> {\n    return this.authService.canActivateProtectedRoutes$\n      .pipe(tap(x => console.log('You tried to go to ' + state.url + ' and this guard said ' + x)));\n  }\n}\n","/* eslint-disable brace-style */\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OAuthErrorEvent, OAuthService } from 'angular-oauth2-oidc';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n  private isAuthenticatedSubject$ = new BehaviorSubject<boolean>(false);\n  public isAuthenticated$ = this.isAuthenticatedSubject$.asObservable();\n\n  private isDoneLoadingSubject$ = new BehaviorSubject<boolean>(false);\n  public isDoneLoading$ = this.isDoneLoadingSubject$.asObservable();\n\n  /**\n   * Publishes `true` if and only if (a) all the asynchronous initial\n   * login calls have completed or errorred, and (b) the user ended up\n   * being authenticated.\n   *\n   * In essence, it combines:\n   *\n   * - the latest known state of whether the user is authorized\n   * - whether the ajax calls for initial log in have all been done\n   */\n  public canActivateProtectedRoutes$: Observable<boolean> = combineLatest([\n    this.isAuthenticated$,\n    this.isDoneLoading$\n  ]).pipe(map(values => values.every(b => b)));\n\n  private navigateToLoginPage() {\n    // TODO: Remember current URL\n    this.router.navigateByUrl('/should-login');\n  }\n\n  constructor(\n    private oauthService: OAuthService,\n    private router: Router,\n  ) {\n    // Useful for debugging:\n    this.oauthService.events.subscribe(event => {\n      if (event instanceof OAuthErrorEvent) {\n        console.error('OAuthErrorEvent Object:', event);\n      } else {\n        console.warn('OAuthEvent Object:', event);\n      }\n    });\n\n    // This is tricky, as it might cause race conditions (where access_token is set in another\n    // tab before everything is said and done there.\n    // TODO: Improve this setup. See: https://github.com/jeroenheijmans/sample-angular-oauth2-oidc-with-auth-guards/issues/2\n    window.addEventListener('storage', (event) => {\n      // The `key` is `null` if the event was caused by `.clear()`\n      if (event.key !== 'access_token' && event.key !== null) {\n        return;\n      }\n\n      console.warn('Noticed changes to access_token (most likely from another tab), updating isAuthenticated');\n      this.isAuthenticatedSubject$.next(this.oauthService.hasValidAccessToken());\n\n      if (!this.oauthService.hasValidAccessToken()) {\n        this.navigateToLoginPage();\n      }\n    });\n\n    this.oauthService.events\n      .subscribe(_ => {\n        this.isAuthenticatedSubject$.next(this.oauthService.hasValidAccessToken());\n      });\n    this.isAuthenticatedSubject$.next(this.oauthService.hasValidAccessToken());\n\n    this.oauthService.events\n      .pipe(filter(e => ['token_received'].includes(e.type)))\n      .subscribe(e => this.oauthService.loadUserProfile());\n\n    this.oauthService.events\n      .pipe(filter(e => ['session_terminated', 'session_error'].includes(e.type)))\n      .subscribe(e => this.navigateToLoginPage());\n\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n\n  public runInitialLoginSequence(): Promise<void> {\n    if (location.hash) {\n      console.log('Encountered hash fragment, plotting as table...');\n      console.table(location.hash.substr(1).split('&').map(kvp => kvp.split('=')));\n    }\n\n    // 0. LOAD CONFIG:\n    // First we have to check to see how the IdServer is\n    // currently configured:\n    return this.oauthService.loadDiscoveryDocument()\n\n      // For demo purposes, we pretend the previous call was very slow\n      .then(() => new Promise<void>(resolve => setTimeout(() => resolve(), 1500)))\n\n      // 1. HASH LOGIN:\n      // Try to log in via hash fragment after redirect back\n      // from IdServer from initImplicitFlow:\n      .then(() => this.oauthService.tryLogin())\n\n      .then(() => {\n        if (this.oauthService.hasValidAccessToken()) {\n          return Promise.resolve();\n        }\n\n        // 2. SILENT LOGIN:\n        // Try to log in via a refresh because then we can prevent\n        // needing to redirect the user:\n        return this.oauthService.silentRefresh()\n          .then(() => Promise.resolve())\n          .catch(result => {\n            // Subset of situations from https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n            // Only the ones where it's reasonably sure that sending the\n            // user to the IdServer will help.\n            const errorResponsesRequiringUserInteraction = [\n              'interaction_required',\n              'login_required',\n              'account_selection_required',\n              'consent_required',\n            ];\n\n            if (result\n              && result.reason\n              && errorResponsesRequiringUserInteraction.indexOf(result.reason.error) >= 0) {\n\n              // 3. ASK FOR LOGIN:\n              // At this point we know for sure that we have to ask the\n              // user to log in, so we redirect them to the IdServer to\n              // enter credentials.\n              //\n              // Enable this to ALWAYS force a user to login.\n              // this.login();\n              //\n              // Instead, we'll now do this:\n              console.warn('User interaction is needed to log in, we will wait for the user to manually log in.');\n              return Promise.resolve();\n            }\n\n            // We can't handle the truth, just pass on the problem to the\n            // next handler.\n            return Promise.reject(result);\n          });\n      })\n\n      .then(() => {\n        this.isDoneLoadingSubject$.next(true);\n\n        // Check for the strings 'undefined' and 'null' just to be sure. Our current\n        // login(...) should never have this, but in case someone ever calls\n        // initImplicitFlow(undefined | null) this could happen.\n        if (this.oauthService.state && this.oauthService.state !== 'undefined' && this.oauthService.state !== 'null') {\n          let stateUrl = this.oauthService.state;\n          if (stateUrl.startsWith('/') === false) {\n            stateUrl = decodeURIComponent(stateUrl);\n          }\n          console.log(`There was state of ${this.oauthService.state}, so we are sending you to: ${stateUrl}`);\n          this.router.navigateByUrl(stateUrl);\n        }\n      })\n      .catch(() => this.isDoneLoadingSubject$.next(true));\n  }\n\n  public login(targetUrl?: string) {\n    // Note: before version 9.1.0 of the library you needed to\n    // call encodeURIComponent on the argument to the method.\n    this.oauthService.initLoginFlow(targetUrl || this.router.url);\n  }\n\n  public logout() { this.oauthService.logOut(); }\n  public refresh() { this.oauthService.silentRefresh(); }\n  public hasValidToken() { return this.oauthService.hasValidAccessToken(); }\n\n  // These normally won't be exposed from a service like this, but\n  // for debugging it makes sense.\n  public get accessToken() { return this.oauthService.getAccessToken(); }\n  public get refreshToken() { return this.oauthService.getRefreshToken(); }\n  public get identityClaims() { return this.oauthService.getIdentityClaims(); }\n  public get idToken() { return this.oauthService.getIdToken(); }\n  public get logoutUrl() { return this.oauthService.logoutUrl; }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AuthConfig, OAuthModule, OAuthModuleConfig, OAuthStorage } from 'angular-oauth2-oidc';\nimport { AuthGuardWithForcedLogin } from './auth-guard-with-forced-login.service';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\n\nconst authAppInitializerFactory = (authService: AuthService):Promise<void> =>   {\n  return authService.runInitialLoginSequence();\n}\n\nconst authConfig: AuthConfig = {\n  issuer: 'https://demo.duendesoftware.com', // Máy chủ của tôi\n  clientId: 'interactive.public', // The \"Auth Code + PKCE\" client\n  responseType: 'code',\n  redirectUri: window.location.origin + '/angular-oauth2-oidc/', // Đăng nhập thành công rồi quay lại với url\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n  scope: 'openid profile email api', // Yêu cầu offline_access hỗ trợ làm mới mã thông báo làm mới\n  useSilentRefresh: true, // Cần thiết để Luồng mã đề xuất sử dụng làm mới dựa trên khung nội tuyến\n  silentRefreshTimeout: 5000, // Để kiểm tra nhanh hơn\n  timeoutFactor: 0.25, // Để kiểm tra nhanh hơn\n  sessionChecksEnabled: true,\n  showDebugInformation: true, // Cũng yêu cầu bật cấp độ \"Verbose\" trong devtools\n  clearHashAfterLogin: false, // https://github.com/manfredsteyer/angular-oauth2-oidc/issues/457#issuecomment-431807040,\n  nonceStateSeparator: 'semicolon' // Dấu chấm phẩy thực bị xáo trộn bởi mã hóa URI của Máy chủ ID Duende\n};\n\nconst authModuleConfig: OAuthModuleConfig = {\n  resourceServer: {\n    allowedUrls: ['https://demo.duendesoftware.com/api'], // API Máy chủ của tôi\n    sendAccessToken: true,\n  }\n};\n\n// Chúng tôi cần một factory vì localStorage không khả dụng tại thời điểm xây dựng AOT\nconst storageFactory = (): OAuthStorage => {\n  return localStorage;\n}\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    OAuthModule.forRoot(),\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    AuthGuardWithForcedLogin,\n  ],\n})\nexport class CoreModule {\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        { provide: APP_INITIALIZER, useFactory: authAppInitializerFactory, deps: [AuthService], multi: true },\n        { provide: AuthConfig, useValue: authConfig },\n        { provide: OAuthModuleConfig, useValue: authModuleConfig },\n        { provide: OAuthStorage, useFactory: storageFactory },\n      ]\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-fallback',\n  template: `<p class=\"alert alert-warning\">This is the <strong>🕳️ FALLBACK</strong> component.</p>`,\n})\nexport class FallbackComponent {\n}\n","import { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n  selector: 'app-should-login',\n  template: `<p class=\"alert alert-dark\">You need to be logged in to view requested page.</p>\n    <p>Please <a href=\"#\" (click)=\"login($event)\">log in</a> before continuing.</p>`,\n})\nexport class ShouldLoginComponent {\n  constructor(private authService: OAuthService) { }\n\n  public login($event: any) {\n    $event.preventDefault();\n    this.authService.initLoginFlow();\n  }\n}\n","export const environment = {\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppMenuComponent_button_18_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","login","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","email","AppMenuComponent_button_22_Template_button_click_0_listener","_r8","ctx_r7","logout","AppMenuComponent","constructor","authService","isAuthenticated$","identityClaims","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","AppMenuComponent_Template","rf","ctx","ɵɵtemplate","AppMenuComponent_span_10_Template","AppMenuComponent_span_15_Template","AppMenuComponent_button_18_Template","AppMenuComponent_span_20_Template","AppMenuComponent_button_22_Template","ɵɵproperty","ɵɵpipeBind1","AppComponent","isDoneLoading$","canActivateProtectedRoutes$","refresh","reload","window","location","clearStorage","localStorage","clear","logoutExternally","open","logoutUrl","hasValidToken","accessToken","refreshToken","idToken","AppComponent_Template","ɵɵelement","AppComponent_Template_button_click_17_listener","AppComponent_Template_button_click_19_listener","AppComponent_Template_button_click_21_listener","AppComponent_Template_button_click_24_listener","AppComponent_Template_button_click_26_listener","AppComponent_Template_button_click_28_listener","BrowserModule","RouterModule","CoreModule","FallbackComponent","ShouldLoginComponent","AppModule","bootstrap","forRoot","path","redirectTo","pathMatch","loadChildren","then","m","BasicsModule","ExtrasModule","component","declarations","imports","i2","filter","switchMap","tap","AuthGuardWithForcedLogin","canActivate","route","state","pipe","isDone","_","isAuthenticated","url","ɵɵinject","factory","ɵfac","AuthGuard","x","console","log","OAuthErrorEvent","BehaviorSubject","combineLatest","map","navigateToLoginPage","router","navigateByUrl","oauthService","isAuthenticatedSubject$","asObservable","isDoneLoadingSubject$","values","every","b","events","subscribe","event","error","warn","addEventListener","key","next","hasValidAccessToken","e","includes","type","loadUserProfile","setupAutomaticSilentRefresh","runInitialLoginSequence","hash","table","substr","split","kvp","loadDiscoveryDocument","Promise","resolve","setTimeout","tryLogin","silentRefresh","catch","result","errorResponsesRequiringUserInteraction","reason","indexOf","reject","stateUrl","startsWith","decodeURIComponent","targetUrl","initLoginFlow","logOut","getAccessToken","getRefreshToken","getIdentityClaims","getIdToken","OAuthService","Router","providedIn","HttpClientModule","APP_INITIALIZER","AuthConfig","OAuthModule","OAuthModuleConfig","OAuthStorage","authAppInitializerFactory","authConfig","issuer","clientId","responseType","redirectUri","origin","silentRefreshRedirectUri","scope","useSilentRefresh","silentRefreshTimeout","timeoutFactor","sessionChecksEnabled","showDebugInformation","clearHashAfterLogin","nonceStateSeparator","authModuleConfig","resourceServer","allowedUrls","sendAccessToken","storageFactory","ngModule","providers","provide","useFactory","deps","multi","useValue","parentModule","Error","FallbackComponent_Template","$event","preventDefault","ShouldLoginComponent_Template","ShouldLoginComponent_Template_a_click_4_listener","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}